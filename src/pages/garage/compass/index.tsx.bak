import { HeadFC } from 'gatsby'
import * as React from 'react'
import { useState } from 'react'
import { Header } from '../../../components/header'

import 'chart.js/auto'
import { Chart } from 'react-chartjs-2'

export interface Instument {
  name: string
  returns: number
  texes: number
  minimal_investment: number
  minimal_period: number
}

const Compass = () => {
  // const { user } = useAuth()
  // useEffect(() => {
  //   if (user === null) {
  //     navigate('/login?redirect=' + window.location.pathname)
  //   }
  // }, [user])

  const [risks, setRisks] = useState<string[]>(['–†–∏–∑–∏–∫ —Ä–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü—ñ—ó', '–†–∏–∑–∏–∫ –¥–µ—Ñ–æ–ª—Ç—É', '–†–∏–∑–∏–∫ –ª—ñ–∫–≤—ñ–¥–Ω–æ—Å—Ç—ñ', '–†–∏–∑–∏–∫ –∫—É—Ä—Å–æ–≤–∏—Ö –∫–æ–ª–∏–≤–∞–Ω—å', '–†–∏–∑–∏–∫ —ñ–Ω—Ñ–ª—è—Ü—ñ—ó', '–†–∏–∑–∏–∫ –ª—ñ–∫–≤—ñ–¥–∞—Ü—ñ—ó', '–†–∏–∑–∏–∫ –ø–æ–≥—Ä–∞–±—É–≤–∞–Ω–Ω—è'])

  const [instruments, setInstruments] = useState<Instument[]>([
    { name: '–°–∫—Ä–∏–Ω—å–∫–∞, –º–∞—Ç—Ä–∞—Ü', returns: 0, texes: 0, minimal_investment: 0, minimal_period: 0 },
    { name: '–û–í–î–ü $', returns: 4.5, texes: 0, minimal_investment: 1000, minimal_period: 0 },
    { name: '–î–µ–ø–æ–∑–∏—Ç –≤ –±–∞–Ω–∫—É', returns: 3, texes: 0, minimal_investment: 0, minimal_period: 0 },
    { name: '–î–µ–ø–æ–∑–∏—Ç –≤ –ø–ª–∞—Ç—ñ–∂—Ü—ñ (Wise, Revolut, —Ç–æ—â–æ)', returns: 3.5, texes: 19.5, minimal_investment: 0, minimal_period: 0 },
    { name: '–î–µ–ø–æ–∑–∏—Ç –≤ Interactive Brokers', returns: 4, texes: 19.5, minimal_investment: 10000, minimal_period: 0 },
    { name: '–§–æ–Ω–¥–æ–≤–∏–π —Ä–∏–Ω–æ–∫ ETF', returns: 8, texes: 19.5, minimal_investment: 200, minimal_period: 0 },
    { name: '–§–æ–Ω–¥–æ–≤–∏–π —Ä–∏–Ω–æ–∫ Target Date ETF', returns: 8, texes: 19.5, minimal_investment: 200, minimal_period: 0 },
    { name: '–§–æ–Ω–¥–æ–≤–∏–π —Ä–∏–Ω–æ–∫ Goverment Treasury Bonds', returns: 4.5, texes: 19.5, minimal_investment: 1000, minimal_period: 0 },
    { name: 'UA Eurobonds', returns: 9, texes: 0, minimal_investment: 30000, minimal_period: 0 },
  ])

  const updateInsturment = (index: number, instrument: Instument) => {
    const newInstruments = [...instruments]
    newInstruments[index] = instrument
    setInstruments(newInstruments)
  }

  const removeInstrument = (index: number) => {
    const newInstruments = [...instruments]
    newInstruments.splice(index, 1)
    setInstruments(newInstruments)
  }

  return (
    <main>
      <Header />
      <div className="container py-5">
        <h1>
          <span className="text-secondary">Invsting</span> Compass üß≠
        </h1>
        <p>–ö–æ–º–ø–∞—Å –∫–æ–Ω—Å–µ—Ä–≤–∞—Ç–∏–≤–Ω–æ–≥–æ —ñ–Ω–≤–µ—Å—Ç–æ—Ä–∞ - –ø–æ—Ç–æ—á–Ω–∏–π –ª–∞–Ω–¥—à–∞—Ñ—Ç —ñ–Ω–≤–µ—Å—Ç. —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –∑ —Ñ—ñ–∫—Å.–¥–æ—Ö—ñ–¥–Ω—ñ—Å—Ç—é –¥–ª—è –≤–∞–ª—é—Ç–Ω–∏—Ö –∫–æ—à—Ç—ñ–≤*</p>
        <Chart
          type="radar"
          data={{
            labels: risks,
            datasets: [
              {
                data: risks.map((r, i) => i),
              },
            ],
          }}
        />
        <h2>–Ü–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏</h2>
        <table className="table">
          <tbody>
            {instruments.map((instrument, index) => (
              <tr key={index}>
                <td>
                  <input className="form-control" type="text" value={instrument.name} onChange={(e) => updateInsturment(index, { ...instrument, name: e.target.value })} />
                </td>
                <td>
                  <input
                    className="form-control"
                    type="number"
                    min="0"
                    max="100"
                    step="0.1"
                    value={instrument.returns}
                    onChange={(e) => updateInsturment(index, { ...instrument, returns: e.target.valueAsNumber || 0 })}
                  />
                </td>
                <td>{instrument.texes}</td>
                <td>{instrument.minimal_investment}</td>
                <td>{instrument.minimal_period}</td>
                <td>
                  <button className="btn btn-outline-primary" onClick={() => removeInstrument(index)}>
                    &times;
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </main>
  )
}

export default Compass
export const Head: HeadFC = () => <title>Compass</title>
